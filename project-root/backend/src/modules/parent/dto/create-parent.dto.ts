import { ApiProperty } from '@nestjs/swagger';
import { Type } from 'class-transformer';
import {
  IsNotEmpty,
  IsNumber,
  IsOptional,
  IsString,
  Length,
  Max,
  Min,
} from 'class-validator';

export class CreateParentDto {
  @IsOptional() // c√≥ th·ªÉ ƒë·ªÉ tr·ªëng
  @IsString()
  //@ApiProperty({ example: 'default-avatar.png', description: '·∫¢nh ng∆∞·ªùi d√πng' })
  @ApiProperty({ type: 'string', format: 'binary', required: false })
  avatarUrl?: string;

  @IsNotEmpty({ message: 'Full Name kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr√¥ng' })
  @IsString({ message: 'Ph·∫£i l√† chu·ªói k√Ω t·ª±' })
  @Length(3, 50, { message: 'FullName ph·∫£i t·ª´ 3 ƒë·∫øn 50 k√Ω t·ª±' })
  @ApiProperty({ example: 'Ph·ª• huynh A', description: 'T√™n ph·ª• huynh' })
  fullName: string;

  @IsNotEmpty({ message: 'Phone Number kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr√¥ng' })
  @IsString({ message: 'Ph·∫£i l√† chu·ªói k√Ω t·ª± s·ªë 0 - 9' })
  @ApiProperty({ example: '0972899999', description: 'SDT ph·ª• huynh' })
  phoneNumber: string;

  @IsNotEmpty({ message: 'Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr√¥ng' })
  @IsString({ message: 'Ph·∫£i l√† chu·ªói k√Ω t·ª±' })
  @ApiProperty({ example: 'A123@gmail.com', description: 'Email ph·ª• huynh' })
  email: string;

  @IsNotEmpty({ message: 'Address kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr√¥ng' })
  @IsString({ message: 'Ph·∫£i l√† chu·ªói k√Ω t·ª±' })
  @ApiProperty({ example: 'ƒê·ªãa ch·ªâ A', description: 'ƒê·ªãa ch·ªâ ph·ª• huynh' })
  address: string;

  @IsNotEmpty({ message: 'User ID kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr√¥ng' })
  @Type(() => Number) // üëà √©p string -> number tr∆∞·ªõc khi validate
  @IsNumber({}, { message: 'User ID ph·∫£i l√† s·ªë' })
  @Min(1, { message: 'User ID ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 1' })
  @Max(1000, { message: 'User ID ph·∫£i nh·ªè h∆°n ho·∫∑c b·∫±ng 1000' })
  @ApiProperty({ example: '1', description: 'Id user' })
  userId: number;
}
